services:
  postgres:
    container_name: postgres-db
    image: postgres:12-bullseye
    environment:
      POSTGRES_USER: vasp
      POSTGRES_PASSWORD: vasp
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped

  vaccine:
    container_name: vaccine-backend
    image: williamscode/vaccine:latest
    ports:
      - "8085:8084"
    networks:
      - postgres
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - rabbitmq

  notification:
    container_name: notification
    image: williamscode/notification:latest
    ports:
      - "8086:8086"
    networks:
      - app-network
      - postgres
    depends_on:
      - rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.0-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    command: >
      bash -c "rabbitmq-plugins enable rabbitmq_shovel rabbitmq_shovel_management &&
               rabbitmq-server"
#  loki:
#    image: grafana/loki:3.3.0
#    container_name: loki
#    volumes:
#      - /Users/rvilyamov/docker_volumes/loki:/etc/loki
#    ports:
#      - "3100:3100"
##    restart: unless-stopped
#    command: -config.file=/etc/loki/loki-config.yml
#    networks:
#      - app-network
#
#  promtail:
#    image: grafana/promtail:3.3.0
#    container_name: promtail
#    volumes:
#      - /var/log:/var/log
#      - /Users/rvilyamov/docker_volumes/promtail:/etc/promtail
#    restart: unless-stopped
#    command: -config.file=/etc/promtail/promtail-config.yml
#    networks:
#      - app-network
#
#  grafana:
#    image: grafana/grafana:11.4.0
#    container_name: grafana
#    volumes:
#      - /Users/rvilyamov/docker_volumes/grafana:/var/lib/grafana
#    ports:
#      - "3001:3000"
#    restart: unless-stopped
#    networks:
#      - app-network

networks:
  postgres:
    driver: bridge
  app-network:
    driver: bridge
    name: app-network

volumes:
  postgres:
  pgadmin:
